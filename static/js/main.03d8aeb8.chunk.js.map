{"version":3,"sources":["img/test.jpg","views/Home.js","api/face.js","views/ImageInput.js","views/VideoInput.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","Link","to","Component","loadModels","_loadModels","apply","this","arguments","_callee","MODEL_URL","regenerator_default","wrap","_context","prev","next","process","faceapi","stop","getFullFaceDescription","_x","_getFullFaceDescription","_callee2","blob","inputSize","OPTION","useTinyModel","img","fullDesc","_args2","_context2","length","undefined","scoreThreshold","sent","withFaceLandmarks","withFaceDescriptors","abrupt","maxDescriptorDistance","createMatcher","_x2","_createMatcher","_callee3","faceProfile","members","labeledDescriptors","faceMatcher","_context3","Object","keys","map","member","name","descriptors","descriptor","Float32Array","testImg","require","JSON_PROFILE","INIT_STATE","imageURL","detections","match","ImageInput","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","asyncToGenerator","mark","t0","t1","t2","setState","handleImage","state","image","then","console","log","fd","detection","findBestMatch","handleFileChange","_ref3","event","resetState","URL","createObjectURL","target","files","loading","objectSpread","_this$state","drawBox","i","_H","box","height","_W","width","_X","_Y","_y","key","style","position","border","borderColor","transform","concat","backgroundColor","marginTop","color","_label","id","type","onChange","accept","src","alt","withRouter","VideoInput","setInputDevice","navigator","mediaDevices","enumerateDevices","_ref2","devices","filter","device","kind","facingMode","exact","startCapture","interval","setInterval","capture","webcam","current","getScreenshot","React","createRef","clearInterval","videoConstraints","camera","className","display","flexDirection","alignItems","react_webcam_default","audio","ref","screenshotFormat","App","Router","history","createHistory","basename","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03d8aeb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.ccd20247.jpg\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>BNK48 Facial Recognition App</h2>\r\n        <li>\r\n          <Link to=\"/photo\">Photo Input</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/camera\">Video Camera</Link>\r\n        </li>\r\n      </div>\r\n    );\r\n  }\r\n}","import * as faceapi from 'face-api.js';\r\n\r\n// Load models and weights\r\nexport async function loadModels() {\r\n  const MODEL_URL = process.env.PUBLIC_URL + '/models';\r\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\r\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\r\n  await faceapi.loadFaceRecognitionModel(MODEL_URL);\r\n}\r\n\r\nexport async function getFullFaceDescription(blob, inputSize = 512) {\r\n  // tiny_face_detector options\r\n  let scoreThreshold = 0.5;\r\n  const OPTION = new faceapi.TinyFaceDetectorOptions({\r\n    inputSize,\r\n    scoreThreshold\r\n  });\r\n  const useTinyModel = true;\r\n\r\n  // fetch image to api\r\n  let img = await faceapi.fetchImage(blob);\r\n\r\n  // detect all faces and generate full description from image\r\n  // including landmark and descriptor of each face\r\n  let fullDesc = await faceapi\r\n    .detectAllFaces(img, OPTION)\r\n    .withFaceLandmarks(useTinyModel)\r\n    .withFaceDescriptors();\r\n  return fullDesc;\r\n}\r\n\r\n// face.js code...\r\n\r\nconst maxDescriptorDistance = 0.5;\r\nexport async function createMatcher(faceProfile) {\r\n  // Create labeled descriptors of member from profile\r\n  let members = Object.keys(faceProfile);\r\n  let labeledDescriptors = members.map(\r\n    member =>\r\n      new faceapi.LabeledFaceDescriptors(\r\n        faceProfile[member].name,\r\n        faceProfile[member].descriptors.map(\r\n          descriptor => new Float32Array(descriptor)\r\n        )\r\n      )\r\n  );\r\n\r\n  // Create face matcher (maximum descriptor distance is 0.5)\r\n  let faceMatcher = new faceapi.FaceMatcher(\r\n    labeledDescriptors,\r\n    maxDescriptorDistance\r\n  );\r\n  return faceMatcher;\r\n}","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face';\r\n\r\n// Import image to test API\r\nconst testImg = require('../img/test.jpg');\r\n\r\n// Import face profile\r\nconst JSON_PROFILE = require('../descriptors/bnk48.json');\r\n\r\n// Initial State\r\nconst INIT_STATE = {\r\n  imageURL: testImg,\r\n  fullDesc: null,\r\n  detections: null,\r\n  descriptors: null,\r\n  match: null\r\n};\r\n\r\nclass ImageInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INIT_STATE, faceMatcher: null };\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    await loadModels();\r\n    this.setState({ faceMatcher: await createMatcher(JSON_PROFILE) });\r\n    await this.handleImage(this.state.imageURL);\r\n  };\r\n\r\n  handleImage = async (image = this.state.imageURL) => {\r\n    await getFullFaceDescription(image).then(fullDesc => {\r\n      if (!!fullDesc) {\r\n        console.log(fullDesc); // Print face descriptor\r\n        this.setState({\r\n          fullDesc,\r\n          detections: fullDesc.map(fd => fd.detection),\r\n          descriptors: fullDesc.map(fd => fd.descriptor)\r\n        });\r\n      }\r\n    });\r\n\r\n    if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n      let match = await this.state.descriptors.map(descriptor =>\r\n        this.state.faceMatcher.findBestMatch(descriptor)\r\n      );\r\n      this.setState({ match });\r\n    }\r\n  };\r\n\r\n  handleFileChange = async event => {\r\n    this.resetState();\r\n    await this.setState({\r\n      imageURL: URL.createObjectURL(event.target.files[0]),\r\n      loading: true\r\n    });\r\n    this.handleImage();\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({ ...INIT_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { imageURL, detections, match } = this.state;\r\n\r\n    let drawBox = null;\r\n    if (!!detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let _H = detection.box.height;\r\n        let _W = detection.box.width;\r\n        let _X = detection.box._x;\r\n        let _Y = detection.box._y;\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                border: 'solid',\r\n                borderColor: 'blue',\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`\r\n              }}\r\n            >\r\n              {!!match && !!match[i] ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: 'blue',\r\n                    border: 'solid',\r\n                    borderColor: 'blue',\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: '#fff',\r\n                    transform: `translate(-3px,${_H}px)`\r\n                  }}\r\n                >\r\n                  {match[i]._label}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          id=\"myFileUpload\"\r\n          type=\"file\"\r\n          onChange={this.handleFileChange}\r\n          accept=\".jpg, .jpeg, .png\"\r\n        />\r\n        <div style={{ position: 'relative' }}>\r\n          <div style={{ position: 'absolute' }}>\r\n            <img src={imageURL} alt=\"imageURL\" />\r\n          </div>\r\n          {!!drawBox ? drawBox : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ImageInput);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Webcam from 'react-webcam';\r\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face';\r\n\r\n// Import face profile\r\nconst JSON_PROFILE = require('../descriptors/bnk48.json');\r\n\r\nconst WIDTH = 420;\r\nconst HEIGHT = 420;\r\nconst inputSize = 160;\r\n\r\nclass VideoInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.webcam = React.createRef();\r\n    this.state = {\r\n      fullDesc: null,\r\n      detections: null,\r\n      descriptors: null,\r\n      faceMatcher: null,\r\n      match: null,\r\n      facingMode: null\r\n    };\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    await loadModels();\r\n    this.setState({ faceMatcher: await createMatcher(JSON_PROFILE) });\r\n    this.setInputDevice();\r\n  };\r\n\r\n  setInputDevice = () => {\r\n    navigator.mediaDevices.enumerateDevices().then(async devices => {\r\n      let inputDevice = await devices.filter(\r\n        device => device.kind === 'videoinput'\r\n      );\r\n      if (inputDevice.length < 2) {\r\n        await this.setState({\r\n          facingMode: 'user'\r\n        });\r\n      } else {\r\n        await this.setState({\r\n          facingMode: { exact: 'environment' }\r\n        });\r\n      }\r\n      this.startCapture();\r\n    });\r\n  };\r\n\r\n  startCapture = () => {\r\n    this.interval = setInterval(() => {\r\n      this.capture();\r\n    }, 1500);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  capture = async () => {\r\n    if (!!this.webcam.current) {\r\n      await getFullFaceDescription(\r\n        this.webcam.current.getScreenshot(),\r\n        inputSize\r\n      ).then(fullDesc => {\r\n        if (!!fullDesc) {\r\n          this.setState({\r\n            detections: fullDesc.map(fd => fd.detection),\r\n            descriptors: fullDesc.map(fd => fd.descriptor)\r\n          });\r\n        }\r\n      });\r\n\r\n      if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n        let match = await this.state.descriptors.map(descriptor =>\r\n          this.state.faceMatcher.findBestMatch(descriptor)\r\n        );\r\n        this.setState({ match });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { detections, match, facingMode } = this.state;\r\n    let videoConstraints = null;\r\n    let camera = '';\r\n    if (!!facingMode) {\r\n      videoConstraints = {\r\n        width: WIDTH,\r\n        height: HEIGHT,\r\n        facingMode: facingMode\r\n      };\r\n      if (facingMode === 'user') {\r\n        camera = 'Front';\r\n      } else {\r\n        camera = 'Back';\r\n      }\r\n    }\r\n\r\n    let drawBox = null;\r\n    if (!!detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let _H = detection.box.height;\r\n        let _W = detection.box.width;\r\n        let _X = detection.box._x;\r\n        let _Y = detection.box._y;\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                border: 'solid',\r\n                borderColor: 'blue',\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`\r\n              }}\r\n            >\r\n              {!!match && !!match[i] ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: 'blue',\r\n                    border: 'solid',\r\n                    borderColor: 'blue',\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: '#fff',\r\n                    transform: `translate(-3px,${_H}px)`\r\n                  }}\r\n                >\r\n                  {match[i]._label}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"Camera\"\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <p>Camera: {camera}</p>\r\n        <div\r\n          style={{\r\n            width: WIDTH,\r\n            height: HEIGHT\r\n          }}\r\n        >\r\n          <div style={{ position: 'relative', width: WIDTH }}>\r\n            {!!videoConstraints ? (\r\n              <div style={{ position: 'absolute' }}>\r\n                <Webcam\r\n                  audio={false}\r\n                  width={WIDTH}\r\n                  height={HEIGHT}\r\n                  ref={this.webcam}\r\n                  screenshotFormat=\"image/jpeg\"\r\n                  videoConstraints={videoConstraints}\r\n                />\r\n              </div>\r\n            ) : null}\r\n            {!!drawBox ? drawBox : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(VideoInput);","import React, { Component } from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport './App.css';\n\nimport Home from './views/Home';\nimport ImageInput from './views/ImageInput';\nimport VideoInput from './views/VideoInput';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router history={createHistory({ basename: process.env.PUBLIC_URL })}>\n          <div className=\"route\">\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/photo\" component={ImageInput} />\n            <Route exact path=\"/camera\" component={VideoInput} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}